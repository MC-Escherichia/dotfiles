webjumps.g = webjumps.google


//gmail acounts
define_webjump("1gmail", "https://mail.google.com/mail/u/0/"); //primary account
define_webjump("2gmail", "https://mail.google.com/mail/u/1/"); //secondary account
define_webjump("3gmail", "https://mail.google.com/mail/u/2/"); //tertiary account

// site -search
define_webjump("site-search", "javascript:window.location.href='http://google.com/search?q=%s+site:'+window.location.host");

define_webjump("so","http://stackoverflow.com/search?q=%s", $alternative="http://stackoverflow.com");


define_webjump("hoogle", "http://haskell.org/hoogle/?hoogle=%s",
               $alternative = "http://haskell.org/hoogle/");

webjumps.h = webjumps.hoogle

define_webjump("github", "http://github.com/search?q=%s&type=Everything");

define_webjump("wok","http://www.webofknowledge.com/?DestApp=UA");

require("duckduckgo");

webjumps.s = webjumps.duckduckgo;

define_webjump("clj","http://clojure.org/search/view?wikispacesFormToken=0f2f71f1bd766ef96c9c85f0ca0f6d01b8568324&q=%s");

define_webjump("voice","http://www.google.com/voice/b/1#inbox/")

// hints mini-buffer
hints_minibuffer_annotation_mode(true);

view_source_use_external_editor = true;

editor_shell_command = "emacsclient";

cwd = make_file("/home/matt/Downloads/");

xkcd_add_title = true;

external_content_handlers =
    {
        "*": "emacsclient",
        text: { "*": "emacsclient" },
        image: { "*": "feh" },
        application: {
            pdf: "mupdf",
            postscript: "gv",
            "x-dvi": "xdvi"
        }
    };

content_handlers.set("application/pdf", content_handler_open_default_viewer);


session_pref("general.useragent.compatMode.firefox", true);

url_completion_use_history = true;
/* mode-line widget config ----------------------------------*/
/* ------------------- buffer count indicator ----------------------------------*/
add_hook("mode_line_hook", mode_line_adder(buffer_count_widget), true);
/* ------------------- buffer loading indicator ----------------------------------*/
add_hook("mode_line_hook", mode_line_adder(loading_count_widget), true);
/* ------------------- remove useless clock ----------------------------------*/

/* Displaying Favicons */
require("favicon");
/* ---------------- favicon in mode line */
/* Doesn't seems to work
add_hook("mode_line_hook", mode_line_adder(buffer_icon_widget), true);
*/
/* ---------------- favicon in mini buffer */
read_buffer_show_icons = true;

remove_hook("download_added_hook", open_download_buffer_automatically);
