 ;; -*-lisp-*-
(in-package :stumpwm)

;;;; -*- Mode: Lisp -*-

;; (run-shell-command "feh --bg-scale /home/dave/Dropbox/Photos/cherry_blossoms.jpg")

(set-prefix-key (kbd "C-t"))

(defcommand swank () ()
    "turn on swank server for the first time.
     Loads a file that re-defines swank and then calls it"
     (run-shell-command "stumpish 'eval (load \"~/.emacs-live-packs/stumpwm-pack/swank-hack.lisp\")'")
     (echo-string
      (current-screen)
      "Starting swank inside stumpwm
       M-x slime-connect RET 4004 RET, then (in-package stumpwm)"))

(define-key *root-map* (kbd "C-s") "swank")
;; start a swank server inside the process

(define-key *root-map* (kbd "C-o") "fnext")
                                        ; for fat fingering "o"

(defcommand console () ()
            "runs a console other than xterm... urxvt doesn't seem to have a class, and it only searcches for consoles in the current group"
            (run-or-raise "urxvtc -e 'screen'" '(:class "URxvt")))


(define-key *root-map* (kbd "c") "console")
(define-key *root-map* (kbd "C-c") "console")
(define-key *root-map* (kbd "M-c") "exec urxvtc")

(defcommand web () ()
  "run or raise conkeror"
  (run-or-raise "conkeror" '(:class "Conkeror")))
(defcommand web2 () ()
  "run or raise firefox"
  (run-or-raise "firefox" '(:class "Firefox")))
(defcommand web3 () ()
  "run or raise chrome"
  (run-or-raise "google-chrome-stable" '(:title "Google Chrome")))
(defcommand spotify () ()
  "run or raise spotify"
  (run-or-raise "spotify" '(:class "Spotify")))

(defcommand emacs () ()
  "overiding emacs behavior"
  (run-or-raise "emacsclient -c" '(:class "Emacs")))


(define-key *root-map* (kbd "w") "web")
(define-key *root-map* (kbd "M-w") "web2")
(define-key *root-map* (kbd "M-q") "web3")
(define-key *root-map* (kbd "M-s") "spotify")

(setf *mouse-focus-policy* :click)

(run-commands "gnewbg musak")
(clear-window-placement-rules)
(define-frame-preference "musak"
    (0 t nil :class "Spotify"))

(defcommand reset-netctl () ()
            "resets netctl-auto for those moments when the internet gets flaky"
            (echo-string
             (current-screen)
             "Restarting netctl-auto")
            (run-shell-command "systemctl restart netctl-auto@wlp2s0.service"))

(define-key *root-map* (kbd "C-i") "reset-netctl")

;; Volume control
(define-key *top-map* (kbd "XF86AudioLowerVolume")  "exec amixer set Master 5%-")
(define-key *top-map* (kbd "XF86AudioRaiseVolume")  "exec amixer set Master 5%+")

;; Mute
(define-key *top-map* (kbd "XF86AudioMute") "exec amixer set Master toggle")

;; backlight
(define-key *top-map* (kbd "XF86MonBrightnessDown")  "exec xbacklight - 20")
(define-key *top-map* (kbd "XF86MonBrightnessUp")  "exec xbacklight + 20")


;; check battery
(defcommand battery-level () ()
  "Display the battery level"
  (message "~a" (run-shell-command "acpi -b | grep 'Battery 0:' | sed \"s/Battery\\ 0:\\ \\(.*\\)/\\1/\" " t)))

(define-key *root-map* (kbd "M-b") "battery-level")

(setq
 *grab-pointer-character* 40
 *grab-pointer-character-mask* 41
 *grab-pointer-foreground* (hex-to-xlib-color "#3db270")
 *grab-pointer-background* (hex-to-xlib-color "#2c53ca"))


;; Yellow and magenta are swapped to show keys in yellow.
(setf *colors*
      '("black" "red" "green" "magenta" "blue" "yellow" "cyan" "white"))
(update-color-map (current-screen))

(defmacro utl-set-color (val color)
  "Similar to `set-any-color', but without updating colors."
  `(dolist (s *screen-list*)
     (setf (,val s) (alloc-color s ,color))))

(utl-set-color screen-fg-color (hex-to-xlib-color "#e5e8ef"))
(utl-set-color screen-bg-color (hex-to-xlib-color "#212121"))
(utl-set-color screen-focus-color (hex-to-xlib-color "#cc8512"))
(utl-set-color screen-border-color "ForestGreen")
(utl-set-color screen-float-focus-color "DeepSkyBlue")
(utl-set-color screen-float-unfocus-color "gray15")
(update-colors-all-screens)
